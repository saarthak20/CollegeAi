
from pptx import Presentation
from pptx.util import Pt
import re

def generate_slides_from_markdown(md_file):
    prs = Presentation()
    bullet_slide_layout = prs.slide_layouts[1]

    with open(md_file, 'r', encoding='utf-8') as f:
        content = f.read()

    sections = re.split(r'\n## ', content)
    title_match = re.search(r'# Title: (.+)', sections[0])
    title = title_match.group(1).strip() if title_match else "Lecture"

    # Title slide
    title_slide = prs.slides.add_slide(prs.slide_layouts[0])
    title_slide.shapes.title.text = title
    subtitle = title_slide.placeholders[1]
    subtitle.text = "Generated by Lecture Generator"

    for sec in sections[1:]:
        lines = sec.strip().split('\n')
        if not lines:
            continue

        section_title = lines[0].strip()
        content_lines = lines[1:]

        slide = prs.slides.add_slide(bullet_slide_layout)
        shapes = slide.shapes
        title_shape = shapes.title
        body_shape = shapes.placeholders[1]
        title_shape.text = section_title

        tf = body_shape.text_frame
        for line in content_lines:
            line = line.strip()
            if not line:
                continue
            if line.startswith('-'):
                p = tf.add_paragraph()
                p.text = line[1:].strip()
                p.level = 0
            else:
                p = tf.add_paragraph()
                p.text = line
                p.level = 0
            p.font.size = Pt(20)

    output_file = md_file.replace('Lecture', 'Slides').replace('.md', '.pptx')
    prs.save(output_file)
    print(f"Slides saved as {output_file}")

if __name__ == "__main__":
    md_file = input("Enter the path to the lecture markdown file: ").strip()
    generate_slides_from_markdown(md_file)

